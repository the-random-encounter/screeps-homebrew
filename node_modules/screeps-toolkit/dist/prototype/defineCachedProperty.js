/**
 * {@link Object.defineProperty} where {@link get} is cached after first call.
 * @author warinternal 20161128
 * @param proto Object on which to add or modify the property.
 * @param propertyName Key of the property.
 * @param fn Function to compute the property value.
 * @param enumerable Is the property listed in {@link Object.keys}. (Optional: default to false)
 * @example defineCachedProperty(Creep.prototype, "bodyParts", (c) => _.countBy(c.body, part => part.type))
 */
export function defineCachedProperty(proto, propertyName, fn, enumerable = false) {
    Object.defineProperty(proto, propertyName, {
        get: function () {
            if (this === proto || this == null)
                return null;
            const result = fn.call(this, this);
            Object.defineProperty(this, propertyName, {
                value: result,
                configurable: true,
                enumerable: false,
            });
            return result;
        },
        configurable: true,
        enumerable,
    });
}
//# sourceMappingURL=defineCachedProperty.js.map