/// <reference types="screeps" />
import { ActionConstant } from "../constants";
/**
 * Count the number of bodyparts of a given type
 * @param body Array of bodyparts {@link Creep.body}
 * @param type Expected type
 * @param active Count only active bodyparts
 * @returns Number of bodyparts
 */
export declare function getBodyparts(body: readonly BodyPartDefinition[], type: BodyPartConstant, active?: boolean): number;
/**
 * Count the number of active bodyparts of a given type
 * @param body Array of bodyparts {@link Creep.body}
 * @param type Expected type
 * @returns Number of active bodyparts
 */
export declare const getActiveBodyparts: (body: readonly BodyPartDefinition[], type: BodyPartConstant) => number;
/**
 * Compute the number of bodyparts of a given action taking boosts into account
 * @param body Array of bodyparts {@link Creep.body}
 * @param action Expected boosts to use
 * @param active Count only active bodyparts
 * @returns An equivalent number of unboosted bodyparts
 */
export declare function getBodypartsBoostEquivalent(body: readonly BodyPartDefinition[], action: ActionConstant, active?: boolean): number;
/**
 * Compute the number of active bodyparts of a given action taking boosts into account
 * @param body Array of bodyparts {@link Creep.body}
 * @param action Expected boosts to use
 * @returns An equivalent number of active unboosted bodyparts
 */
export declare const getActiveBodypartsBoostEquivalent: (body: readonly BodyPartDefinition[], action: ActionConstant) => number;
